@using Exam.Models;
@*左侧模块表 连接到总页面  母版中*@
@{
    Layout = null;
}
@{
    //从session中获取 当前登录的对象
    Teacher te = ViewData["MoKuai"] as Teacher;
    ExamSysEntities1 ef = new ExamSysEntities1();
    //获取当前登陆用户的身份 获得当前登录人的身份
    Role HuoDeng= ef.Roles.ToList().Find(a=>a.RoleID==te.RoleID);
    //获取所有功能的集合  根据功能判断哪个模块的
    List<Menu> Menuli = ef.Menus.ToList();
    //用来保存模块的ID 
    List<int> MoKuaiId = new List<int>();

}
<nav class="navbar-default navbar-static-side" role="navigation">
    <div class="nav-close">
        <i class="fa fa-times-circle"></i>
    </div>
    <div class="sidebar-collapse">
        <ul class="nav" id="side-menu">
            <li class="nav-header">
                <div class="dropdown profile-element">
                    <a data-toggle="dropdown" class="dropdown-toggle" href="#" id="dropdownMenu1" aria-haspopup="true" aria-expanded="true">
                        <span class="clear">
                            <span class="block m-t-xs"><strong class="font-bold">@te.UserName</strong></span>
                            <span class="text-muted text-xs block">@HuoDeng.RoleName<b class="caret"></b></span>
                        </span>
                    </a>
                    <ul class="dropdown-menu animated fadeInRight m-t-xs" aria-labelledby="dropdownMenu1">
                     <li>
                         <a class="J_menuItem" href="#">修改密码</a>
                     </li>
                        <li>
                            <a class="J_menuItem" href="profile.html">个人资料</a>
                        </li>
                        <li class="divider"></li>
                        <li>
                            <a href="/LoginExamGou/Idenx">安全退出</a>
                        </li>
                    </ul>
                </div>
                <div class="logo-element">
                    Exam
                </div>
            </li>
            @{ 
                //说先遍历 所有功能
                foreach (var item in Menuli)
                {
                    //根据功能中的 roles 遍历属于哪个模块
                    string[] Fen = LeiFen.FenList(item.Roles);
                    foreach (var item1 in Fen)
                    {
                        //如果当前登录的用户角色拥有该功能 则保存他的模块ID
                        if(Convert.ToInt32(item1)== HuoDeng.RoleID)
                        {
                            if (MoKuaiId.Count(x => x == item.ModuleID)>0)
                            {

                            }   
                            else
                            {
                                MoKuaiId.Add(item.ModuleID);
                            }
                        }
                    }
                }
            }
            @{ 
                //首先获取该用户的模块
                    foreach (var item in MoKuaiId)
                    {
                       Module DaMoKuai=ef.Modules.ToList().Find(x=>x.ModuleID==item);
                         <li>
                                <a href="#">
                                    <i class="@DaMoKuai.Ico"></i> <span class="nav-label">@DaMoKuai.ModuleName</span> <span class="fa arrow"></span>
                                </a>
                            <ul class="nav nav-second-level">

                                @{
                                    //根据模块判出具体的功能
                                    foreach (var item1 in Menuli.Where(x => x.ModuleID == item))
                                    {
                                        <li>
                                            <a class="J_menuItem" href="/@item1.Service/Index">@item1.MenuName</a>
                                        </li>
                                    }
                                }

                            </ul>
                    </li>
                }
            }
        </ul>
    </div>
</nav>
