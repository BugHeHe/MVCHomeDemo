@{
    ViewBag.Title = "Index";
    Layout = null;
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Lis/axios.js"></script>
<script src="~/Lis/vue.js"></script>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<div class="container">
    <h3>年级管理</h3>
    <hr />
    <form class="form-inline">
        年级名称：
        <div class="form-group">
            <label class="sr-only" for="exampleInputEmail3">Email address</label>
            <input type="text" class="form-control" v-model="SeleName" id="exampleInputEmail3" placeholder="请输入年级名称">
        </div>
        <button v-on:click="Select" class="btn btn-info">查询</button>
        <button type="reset" class="btn btn-primary">重置</button>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#AddModal">+添加</button>
        <button type="button" class="btn btn-danger"><span class="glyphicon glyphicon-remove"></span>批量删除</button>
    </form>
    <table class="table table-bordered">
        <tr>
            <td>编号</td>
            <td>年级名称</td>
            <td>操作</td>
        </tr>
        <tr v-for="s in Grade">
            <td>{{s.GradeID}}</td>
            <td>{{s.GradeName}}</td>
            <td><span class=" glyphicon glyphicon-pencil" style="cursor:pointer"></span><span class="glyphicon glyphicon-remove" v-on:click="Clear" style="margin-left:5px; cursor:pointer"></span></td>
        </tr>
    </table>
    @*模态框 用来添加年级信息*@
    <div class="modal fade" id="AddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">添加年级</h4>
                </div>
                <div class="modal-body">
                    <form class="form-inline">
                        年级名称：
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="GradeName" id="exampleInputEmail3" placeholder="请输入年级名称">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" v-on:click="ADD" class="btn btn-primary">保存</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //new vue
    var app = new Vue(
        {
            el: '.container',
            data:
                {
                    Grade: [],
                    SeleName: '',
                    GradeName: ''
                },
            mounted() {
                this.Init();
            },
            methods: {
                //刷新数据
                Init() {
                        axios.get("/Grade/List").then(Response => {
                            this.Grade = Response.data;
                        })
                },
                //根据名称查询数据
                Select() {
                    axios.post('/Grade/Select', { Name: this.SeleName }).then(response => {
                        this.Grade = response.data;
                    })
                },
                //添加年级对象
                ADD() {
                    axios.post('/Grade/ADD', { GradeName: this.GradeName }).then(Response => {
                        if (Response.data != "失败") {
                            alert("添加成功");
                            //去掉模态框
                            ModuleQ();
                            //重新绑定数据
                            this.Init();
                        } else {
                            alert("已经存在，请重新输入");
                        }
                    })
                },
                //清除年级对象
                Clear(e) {
                    var Shu = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(1)').text();
                    if (confirm("确定要删除吗？")) {
                        axios.post('/Grade/Clear', { GradeN: Shu }).then(Response => {

                            alert("删除成功");
                            //重新绑定数据
                            this.Init();
                        })
                    }
                }
            },
        });
    function ModuleQ() {
        $('#AddModal').hide();
        $('.modal-backdrop').remove();
        $('body').removeClass('modal-open');
    }
</script>

