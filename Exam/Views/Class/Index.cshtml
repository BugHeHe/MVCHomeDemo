
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Lis/axios.js"></script>
<script src="~/Lis/vue.js"></script>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Lis/My97DatePicker/WdatePicker.js"></script>
<style>
    .form-inline {
        margin-top: 10px;
    }
</style>
<div class="container">
    <h3>班级列表</h3>
    <hr />
    <div class="form-inline">
        班级名称：
        <div class="form-group" style="margin-left:10px;">
            <label class="sr-only" for="exampleInputEmail3"></label>
            <input type="text" class="form-control" v-model="Name" id="exampleInputEmail3" placeholder="请输入章节名称">
        </div>
        @{
            List<SelectListItem> list = ViewData["Grade"] as List<SelectListItem>;
        }
        班主任：
        <div class="form-group" style="margin-left:10px;">
            <label class="sr-only" for="exampleInputEmail3"></label>
            <input type="text" v-model="TeacherName" class="form-control" id="exampleInputEmail3" placeholder="请输入班主任名称">
        </div>
        年级：@Html.DropDownList("BookGrade", list, new { @class = "l-text-field", @style = "height:30px;width:150px;" })
        <button class="btn btn-primary" v-on:click="Select" style="margin-left:10px;">查询</button>
        <button class="btn btn-primary" v-on:click="Result" style="margin-left:10px;">重置</button>
        <button class="btn btn-success" style="margin-left:10px;" data-toggle="modal" data-target="#AddModal">添加</button>
    </div>
    <table class="table table-bordered" style="margin-top:10px;">
        <tr>
            <td>编号</td>
            <td>班级名称</td>
            <td>班主任</td>
            <td>教员</td>
            <td>年级名称</td>
            <td>创建时间</td>
            <td>操作</td>
        </tr>
        <tr v-for="s in ClassS1">
            <td>{{s.ClassID}}</td>
            <td>{{s.ClassName}}</td>
            <td>{{s.MasterName}}</td>
            <td>{{s.TeacharName}}</td>
            <td>{{s.GradeName}}</td>
            <td>{{s.CreateTime}}</td>
            <td><span class="glyphicon glyphicon-pencil" data-toggle="modal" v-on:click="ChuUpdate" data-target="#AddModa2" style="cursor:pointer"></span><span class="glyphicon glyphicon-remove" v-on:click="Clear" style="margin-left:5px; cursor:pointer"></span></td>
        </tr>
    </table>
    每页 10 条记录，共<span id="CuntYe"></span>页，当前第<span id="Ye">0</span>页
    <button class="btn btn-primary" v-on:click="ShouYe">首页</button>
    <button class="btn btn-primary" v-on:click="ShangYe">上一页</button>
    <button class="btn btn-primary" v-on:click="XiaYe">下一页</button>
    <button class="btn btn-primary" v-on:click="MoYe">末页</button>
    @*模态框 用来添加教材信息*@
    <div class="modal fade" id="AddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">添加班级</h4>
                </div>
                <div class="modal-body">
                    <div class="form-inline">
                        &nbsp; &nbsp; 班级名称：
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.ClassName" id="exampleInputEmail3" placeholder="请输入班级名称">
                        </div>
                    </div>

                    <div class="form-inline">
                        班主任名称：
                        <select id="ADBan" style="width:300px;height:30px">
                            <option v-for="s in Ban">{{s}}</option>
                        </select>
                        @*<div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.MasterName" id="exampleInputEmail3" placeholder="请输入班主任名称">
                        </div>*@
                    </div>
                    <div class="form-inline">
                        &nbsp; &nbsp; 教员名称：
                        <select id="ADJiao" style="width:300px;height:30px">
                            <option v-for="s in Jiao">{{s}}</option>
                        </select>
                        @*<div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.TeacharName" id="exampleInputEmail3" placeholder="请输入教员名称">
                        </div>*@
                    </div>
                    <div class="form-inline" style="margin-top:10px;">
                        &nbsp; &nbsp; 所属年级：
                        <div class="form-group">
                            @Html.DropDownList("BookGrade1", list, new { @class = "l-text-field", @style = "height:30px;width:150px;" })
                        </div>
                    </div>
                    <div class="form-inline">
                        &nbsp; &nbsp;创建时间：
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.CreateTime" id="exampleInputEmail4" OnFocus="WdatePicker()" placeholder="请选择创建时间">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" v-on:click="ADD" class="btn btn-primary">保存</button>
                </div>
            </div>
        </div>
    </div>
    @*模态框 用来添加教材信息*@
    <div class="modal fade" id="AddModa2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">添加班级</h4>
                </div>
                <div class="modal-body">
                    <div class="form-inline">
                        &nbsp; &nbsp; 班级名称：
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.ClassName" id="exampleInputEmail3" placeholder="请输入班级名称">
                        </div>
                    </div>

                    <div class="form-inline">
                        班主任名称：
                        <select id="UpBan" style="width:300px;height:30px">
                            <option v-for="s in Ban">{{s}}</option>
                        </select>
                                    @*<div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.MasterName" id="exampleInputEmail3" placeholder="请输入班主任名称">
                        </div>*@
                    </div>
                    <div class="form-inline">
                        &nbsp; &nbsp; 教员名称：
                        <select id="UpJiao" style="width:300px;height:30px">
                            <option v-for="s in Jiao">{{s}}</option>
                        </select>
                                    @*<div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.TeacharName" id="exampleInputEmail3" placeholder="请输入教员名称">
                        </div>*@
                    </div>
                    <div class="form-inline" style="margin-top:10px;">
                        &nbsp; &nbsp; 所属年级：
                        <div class="form-group">
                            @Html.DropDownList("BookGrade2", list, new { @class = "l-text-field", @style = "height:30px;width:150px;" })
                        </div>
                    </div>
                    <div class="form-inline">
                        &nbsp; &nbsp;创建时间：
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail3">Email address</label>
                            <input type="text" class="form-control" v-model="ClassS.CreateTime" id="exampleInputEmail4" OnFocus="WdatePicker()" placeholder="请选择创建时间">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" v-on:click="Update" class="btn btn-primary">保存</button>
                </div>
            </div>
        </div>
    </div>


</div>
<script>
    var a = new Vue({
        el: '.container',
        data: {
            ClassS1: [],
            Name: '',
            TeacherName: '',
            ClassS: {
                ClassID: '',
                ClassName: '',
                MasterName: '',
                TeacharName: '',
                GradeName: '',
                CreateTime: ''
            },
            Ban: [],
            Jiao:[],
        },
        created() {
            this.Init();
        },
        methods: {
            Init() {
                axios.post('/Class/List', { page: '0' }).then(Response => {
                    this.ClassS1 = Response.data.Li;
                    $('#CuntYe').text(Response.data.Ye);
                    $('#Ye').text("1");
                });
                this.JiaoBan();
            },
            //首页
            ShouYe() {
                var Grade = $('#BookGrade').val();
                var TiName = this.Name;
                var a = "1";
                axios.post('/Class/Select', { page: a, GradeID: Grade, ClassName: this.Name, TeacherName: this.TeacherName }).then(Response => {
                    this.ClassS1 = Response.data.Li;
                })
                $('#Ye').text(a);
            },
            //分页的下一页
            XiaYe() {
                var Grade = $('#BookGrade').val();
                var TiName = this.Name;
                var a = parseInt($('#Ye').text()) + 1;
                if (parseInt($('#Ye').text()) >= parseInt($('#CuntYe').text())) {
                    alert("已经是最后一页了");
                }
                else {
                    axios.post('/Class/Select', { page: parseInt($('#Ye').text()) + 1, GradeID: Grade, ClassName: this.Name, TeacherName: this.TeacherName }).then(Response => {
                        this.ClassS1 = Response.data.Li;
                    })
                    $('#Ye').text(a);
                }
            },
            //分页的上一页
            ShangYe() {
                var Grade = $('#BookGrade').val();
                var TiName = this.Name;
                var a = parseInt($('#Ye').text()) - 1;
                if (a <= 0) {
                    alert("已经是第一页了");
                    $('#Ye').text(1);
                }
                else {
                    axios.post('/Class/Select', { page: a, GradeID: Grade, ClassName: this.Name, TeacherName: this.TeacherName }).then(Response => {
                        this.ClassS1 = Response.data.Li;
                    })
                    $('#Ye').text(a);
                }
            },
            //最后一页
            MoYe() {
                var Grade = $('#BookGrade').val();
                var TiName = this.Name;
                var a = $('#CuntYe').text();
                axios.post('/Class/Select', { page: a, GradeID: Grade, ClassName: this.Name, TeacherName: this.TeacherName }).then(Response => {
                    this.ClassS1 = Response.data.Li;
                })
                $('#Ye').text(a);
            },
            //查询
            Select() {
                var Grade = $('#BookGrade').val();
                var TiName = this.Name;
                axios.post('/Class/Select', { page: 0, GradeID: Grade, ClassName: this.Name, TeacherName: this.TeacherName }).then(Response => {
                    this.ClassS1 = Response.data.Li;
                    $('#CuntYe').text(Response.data.Ye);
                    $('#Ye').text(1);
                })
            },
            //添加班级信息
            ADD() {
                var BookID = $('#BookGrade1').val();
                if (parseInt(BookID) > 0) {
                    this.ClassS.MasterName = $('#ADBan').val();
                    this.ClassS.TeacharName = $('#ADJiao').val();
                    this.ClassS.GradeName = BookID;
                    this.ClassS.CreateTime = $('#exampleInputEmail4').val();
                    axios.post('/Class/ADD', this.ClassS).then(Response =>
                    {
                        alert(Response.data);
                            this.Init();
                        ModuleQ();
                        this.Kong();
                    })

                } else
                    alert("请选择正确的年级");
            },
            Clear(e) {
                if (confirm("确定要删除吗？")) {

                    this.ClassS.ClassName = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(1)').text();
                    this.ClassS.ClassID = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(0)').text();
                    axios.post('/Class/Clear', this.ClassS).then(Response => {
                        alert(Response.data);
                            this.Init();
                    })
                }
            },
            ChuUpdate(e) {
                this.ClassS.MasterName= $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(2)').text();
                this.ClassS.ClassName = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(1)').text();
                this.ClassS.TeacharName = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(3)').text();
                this.ClassS.GradeName = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(4)').text();
                this.ClassS.ClassID = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(0)').text();
                this.ClassS.CreateTime = $('.table tr:eq(' + $(e.currentTarget.parentElement.parentElement).index() + ') td:eq(5)').text();
                var ops = document.getElementById("BookGrade2").options;//取出下拉列表的项对象集合
                for (var i = 0; i < ops.length; i++) {//遍历集合
                    if (this.ClassS.GradeName == ops[i].text) {//如果该项的value等于文本框填写的值
                        document.getElementById("BookGrade2").options[i].selected = "selected";//设定下拉列表相应的下拉项的选中
                        break;
                    }
                }
                SelectXia('#UpJiao', this.ClassS.TeacherName);
                selectXia('#UpBam', this.ClassS.MasterName);

            },
            //修改班级对象
            Update() {
                this.ClassS.GradeName = $('#BookGrade2').val();
                this.ClassS.MasterName = $('#UpBan').val();
                this.ClassS.TeacharName = $('#UpJiao').val();
                axios.post('/Class/Update',this.ClassS).then(Response =>
                {
                    alert(Response.data);
                    this.Init();
                    ModuleQ();
                })
                this.Kong();
            },
            //重置
            Result() {
                var ops = document.getElementById("BookGrade").options;//取出下拉列表的项对象集合
                for (var i = 0; i < ops.length; i++) {//遍历集合
                    if ("全部" == ops[i].text) {//如果该项的value等于文本框填写的值
                        document.getElementById("BookGrade").options[i].selected = "selected";//设定下拉列表相应的下拉项的选中
                        break;
                    }
                }
                this.Kong();
                this.Init();
            },
            Kong() {
                this.ClassS.ClassID = "";
                this.ClassS.ClassName = "";
                this.ClassS.MasterName = "";
                this.ClassS.TeacharName = "";
                this.ClassS.GradeName = "";
                this.ClassS.CreateTime = "";
            },
            //获取班主任和教员
            JiaoBan() {
                axios.post('/Class/JiaoShow').then(Response =>
                {
                    this.Ban = Response.data.B;
                    this.Jiao = Response.data.J;
                })
            },
        }
    });
    function SelectXia(a, zhi) {
        var ops = document.getElementById(a).options;//取出下拉列表的项对象集合
        for (var i = 0; i < ops.length; i++) {//遍历集合
            if (zhi == ops[i].values) {//如果该项的value等于文本框填写的值
                document.getElementById(a).options[i].selected = "selected";//设定下拉列表相应的下拉项的选中
                break;
            }
        }
    }
    function ModuleQ() {
        $('#AddModal').hide();
        $('#AddModa2').hide();
        $('.modal-backdrop').remove();
        $('body').removeClass('modal-open');
    }
</script>

